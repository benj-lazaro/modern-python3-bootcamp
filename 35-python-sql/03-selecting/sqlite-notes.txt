To launch sqlite from terminal
------------------------------
$ sqlite3
sqlite>


SQLite Data Types
-----------------
NULL        = NULL value
INTEGER     = signed number; stored in bytes
REAL        = floating-point value
TEXT        = text string
BLOB        = blob of data; stored exactly as it was input


To create a new database file
-----------------------------
Syntax:
sqlite3 <database_name>.db

Example:
$ sqlite3 dog_db.db
sqlite>

NOTE: Automatically creates a file .db on the directory where sqlite was launched from


To create a new table
---------------------
Syntax:
create table <table_name> (<field_name> <data_type>, <field_name> <data_type>, ..);

Example:
sqlite> create table dogs (name text, breed text, age integer);


To check the existence of a table
---------------------------------
Syntax:
.tables

Example:
sqlite> .tables


To insert data into a table
---------------------------
Syntax:
INSERT INTO <table_name> (<column_name>, <column_name>) VALUES (<corresponding_value>, <corresponding_value>);
insert into <table_name> (<column_name>, <column_name>) values (<corresponding_value>, <corresponding_value>);

NOTE: Make sure that the corresponding values are assigned accordingly; sqlite will NOT generate an error message

Example:
INSERT INTO cats (name, breed, age) VALUES ("Blue", "Scottish Fold", 3);
insert into cats (name, breed, age) values ("Blue", "Scottish Fold", 3);


To verify inserted data
-----------------------
Example:
sqlite> select & from cats;


To perform bulk insert
----------------------
- Create a separate file
- Each row contains an INSERT statement
- Save the file with the file extension .sql

- Execute the following CLI command on terminal:
$ sqlite3 <database_name>.db
sqlite> .read <insert_bulk_file>.sql
sqlite> select * from <table_name>;

Example:
$ sqlite3 dogs_db.db
sqlite> .read bulk_insert.sql
sqlite> select * from dogs;


To select all columns from a table
----------------------------------
Syntax:
select * from <table_name>;

Example:
sqlite> select * from dogs;


To select from a specific column from a table
---------------------------------------------
Syntax:
select <column_name> from <table_name>;

Example:
sqlite> select name from dogs;


To select multiple columns from a table
----------------------------------------
Syntax:
select <column_name>, <column_name> from <table_name>;

Example:
sqlite> select name, age from dogs;


To filter selection from a table
---------------------------------
Syntax:
select * from <table_name> where <expression> is <value>;
select <column_name> from <table_name> where <expression> is <value>;
select <column_name> from <table_name> where <expression> like "%<existing_pattern>%"  # % functions as a wildcard

Example:
select * from dogs where name is "Piggy";
select name from dogs where breed is "Husky";
select * from dogs where breed is not "Chihuahua";
select * from dogs where breed is not "Chihuahua" and breed is not "Pug";
select * from dogs where age is > 9;
select * from dogs where name like "%gg%";